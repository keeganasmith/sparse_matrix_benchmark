#!/bin/bash
#SBATCH --job-name=sparse_matrix
#SBATCH --time=2:00:00 --mem=480G
#SBATCH --ntasks=1 --nodes=1 --cpus-per-task=96
#SBATCH --output=out.log --error=error.log
#SBATCH --partition=staff
module purge
export OMP_NUM_THREADS=96
export WATCH_SECONDS=1
export NUM_THREADS=96
cd /scratch/user/u.ks124812/wes_benchmarking/sparse_matrix_benchmark
source modules.sh
module list
g++ --version
make -B matrix
for(( j=0 ; j<3 ; j++ ))
do 
  for i in 175000; do
    > ./meminfo_output_run_$j/meminfo_$i.log
    > ./ps_output_run_$j/ps_output_$i.log
    > ./free_output_run_$j/free_output_$i.log
    watch -n $WATCH_SECONDS "cat /proc/meminfo >> ./meminfo_output_run_$j/meminfo_$i.log; date +'%Y-%m-%dT%H:%M:%S%z' >> ./meminfo_output_run_$j/meminfo_$i.log" &> /dev/null &
    watch -n $WATCH_SECONDS "ps -p $(pgrep -f "matrix") -o %cpu,%mem,cmd --no-headers >>./ps_output_run_$j/ps_output_$i.log; date +'%Y-%m-%dT%H:%M:%S%z' >> ./ps_output_run_$j/ps_output_$i.log" &> /dev/null &
    watch -n $WATCH_SECONDS "free -h >> ./free_output_run_$j/free_output_$i.log; date +'%Y-%m-%dT%H:%M:%S%z' >> ./free_output_run_$j/free_output_$i.log" &> /dev/null &
        echo n: $i
        echo Start time:
        date
        ./matrix $i $NUM_THREADS
        echo End time:
        date
        killall -9 watch
        sleep 5
  done
done
killall -9 watch

